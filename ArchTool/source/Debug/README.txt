1、code的值必须按照顺序来写【已解决】
	原因：CODEINDEX结构体是按照第几个输入的顺序来放入code，在写入FLASH时也是按照这个顺序，如果输入的顺序就是code的顺序就不会出现错误，否则就会出现code值和index不对应
	解决：可以对code进行排序，然后按照code的值来修改对应的输入顺序；

2、不能出现空行【已解决】
	通过判断一行没内容就跳过，所以空行中不能出现空格

3、出现重复的code不会报错【已解决】

4、ini中所要求的音频不存在报错【已解决】

5、笔头扫描到没有用到的编码会一直‘滴滴’叫【已解决】
	这个是在固件里判断解决；
6、4当中解决了部分问题，还是会有部分code会使其发出‘滴滴’的声音【已解决】
	这个是个隐藏的BUG，因为我按照(0x10000+19000)作为INDEX的初始地址了，事实上INDEX的初始地址为(0x10000x+19000*5)

7、如果=号后的名字太长会出现问题【已解决】
	比如：12345 = before_refrigerators.s7 refrigerators.s7
	前面的名字就会识别错，而找不到文件所在；

	问题所在：修改名字长度限制时只是把temp_name和link_num对应的名字修改，而存储所有不重复音频的部分没有修改名字的长度，所以会出现错误，后面深究其原因；

8、通常使用的Siren7压缩过的文件，而把wav文件压缩也需要写很多的参数，容易出错，加入直接调用Siren7压缩算法来直接处理，减少wav文件压缩的步骤【已解决】
	已把Siren7压缩加入到程序中

9、在XP系统下运行时出现“找不到msvcp100d.dll”库的错误，一方面是没有采用静态链接库连接的问题【已解决】
	采用了静态编译，把库直接编译进程序当中；

10、在每一行当中音频最后不能出现空格【已解决】
	原因：每次都是通过判断不是空格或者“+”来找到文件名，而最后一个空格过后又当作一个空的文件名存在；
	解决：1、判断如果空格或者“+”后面没有文件名可用的字符时直接返回，这样就不会出现空的文件名；【采用】
	      2、直接判断文件名是否为空，如果为空就忽略这个文件；

11、和2相似，空行当中不能出现空格【未解决】

12、当程序运行出现错误时，audio目录当中就会比较的乱【已解决】
	原因：但程序出现错误时退出，并没有执行清理的bat文件
	解决：在每次出现错误退出时都执行一遍清理的bat文件

13、当程序意外退出时audio目录当中比较的乱【未解决】
	原因同上，但是程序的意外退出时不可预知的，没有查找有没有一旦程序退出就执行某条指令的行为；

14、【客户反映】打包一本书20分钟，效率比较低【已解决】
	原因：程序里是只要有wav音频就会启动siren7压缩，这样造成大量的siren7同时并行运行，耗尽CPU和内存的资源，导致siren7单个运行缓慢
	解决：在启动siren7压缩前检测前等待前一个压缩完成；

15、【客户反映】打包大批量数据时，一旦出现错误，所有的流程都要重新走一遍，繁琐耗时【已解决】
	解决：现在先对所有音频进行检测，最后得到一个检测报告，然后根据检测报告进行修改音频和conf.ini文件，接下来则可以一次运行通过

16、【客户反映】一本书利用的码值和音频量都很大，但是在一个conf.ini文件中写会得到非常多的内容，难度加大【已解决】
	解决：采用把*.ini文件合并到conf.ini的方式来不打乱以前的程序，这样很容易的就可以和以前的程序结合

17、为看着方便，已去掉开始检测"[code2index]"部分程序
	